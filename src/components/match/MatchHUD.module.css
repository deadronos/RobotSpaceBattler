.hudRoot {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 100;
  font-family: monospace;
  color: #ffffff;
  text-shadow: 0 0 2px rgba(0, 0, 0, 0.8);
}

/* Timer section - top left */
.timerSection {
  position: absolute;
  top: 10px;
  left: 10px;
  background: rgba(0, 0, 0, 0.7);
  padding: 8px 12px;
  border-radius: 4px;
  border: 1px solid rgba(255, 255, 255, 0.2);
}

.timeDisplay {
  font-size: 18px;
  font-weight: bold;
  margin-bottom: 4px;
  color: #00ff00;
}

.progressBar {
  width: 150px;
  height: 4px;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 2px;
  overflow: hidden;
}

.progressFill {
  height: 100%;
  background: linear-gradient(90deg, #00ff00, #00aa00);
  transition: width 0.1s linear;
  width: var(--progress-value, 0%);
}

/* Discrete progress levels */
.progressFill[data-progress='10'] { width: 10%; }
.progressFill[data-progress='20'] { width: 20%; }
.progressFill[data-progress='30'] { width: 30%; }
.progressFill[data-progress='40'] { width: 40%; }
.progressFill[data-progress='50'] { width: 50%; }
.progressFill[data-progress='60'] { width: 60%; }
.progressFill[data-progress='70'] { width: 70%; }
.progressFill[data-progress='80'] { width: 80%; }
.progressFill[data-progress='90'] { width: 90%; }
.progressFill[data-progress='100'] { width: 100%; }

/* Team stats - top right */
.teamStats {
  position: absolute;
  top: 10px;
  right: 10px;
  display: flex;
  gap: 8px;
  flex-direction: column;
}

.teamCard {
  background: rgba(0, 0, 0, 0.7);
  padding: 8px 12px;
  border-radius: 4px;
  border: 1px solid rgba(255, 255, 255, 0.2);
  min-width: 120px;
}

.teamName {
  font-weight: bold;
  margin-bottom: 2px;
  text-transform: uppercase;
  font-size: 12px;
}

.teamCount {
  font-size: 14px;
  margin-bottom: 4px;
  color: #ffff00;
}

.healthBar {
  width: 100%;
  height: 6px;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 3px;
  overflow: hidden;
}

.healthFill {
  height: 100%;
  background: linear-gradient(90deg, #00ff00, #ff0000);
  display: block;
  transition: width 0.2s ease;
  width: var(--health-value, 100%);
}

/* Discrete health levels */
.healthFill[data-health='10'] { width: 10%; }
.healthFill[data-health='20'] { width: 20%; }
.healthFill[data-health='30'] { width: 30%; }
.healthFill[data-health='40'] { width: 40%; }
.healthFill[data-health='50'] { width: 50%; }
.healthFill[data-health='60'] { width: 60%; }
.healthFill[data-health='70'] { width: 70%; }
.healthFill[data-health='80'] { width: 80%; }
.healthFill[data-health='90'] { width: 90%; }
.healthFill[data-health='100'] { width: 100%; }

/* Status message - center */
.statusMessage {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background: rgba(0, 0, 0, 0.9);
  padding: 20px 30px;
  border-radius: 8px;
  border: 2px solid rgba(255, 255, 255, 0.3);
  font-size: 24px;
  font-weight: bold;
  text-align: center;
  max-width: 400px;
  animation: messagePopIn 0.3s ease-out;
}

.statusMessage.status-victory {
  border-color: #00ff00;
  color: #00ff00;
  text-shadow: 0 0 10px rgba(0, 255, 0, 0.5);
}

.statusMessage.status-draw {
  border-color: #ffff00;
  color: #ffff00;
  text-shadow: 0 0 10px rgba(255, 255, 0, 0.5);
}

.statusMessage.status-timeout {
  border-color: #ff6600;
  color: #ff6600;
  text-shadow: 0 0 10px rgba(255, 102, 0, 0.5);
}

@keyframes messagePopIn {
  0% {
    transform: translate(-50%, -50%) scale(0.5);
    opacity: 0;
  }
  100% {
    transform: translate(-50%, -50%) scale(1);
    opacity: 1;
  }
}

/* Debug info - bottom left */
.debugInfo {
  position: absolute;
  bottom: 10px;
  left: 10px;
  background: rgba(0, 0, 0, 0.7);
  padding: 8px 12px;
  border-radius: 4px;
  border: 1px solid rgba(255, 255, 255, 0.2);
  font-size: 11px;
}

.debugItem {
  margin: 2px 0;
  color: #aaaaaa;
}

/* Control button - bottom center */
.controlButton {
  position: absolute;
  bottom: 10px;
  left: 50%;
  transform: translateX(-50%);
  background: rgba(0, 100, 200, 0.8);
  color: #ffffff;
  border: 1px solid rgba(255, 255, 255, 0.3);
  padding: 8px 16px;
  border-radius: 4px;
  font-family: monospace;
  font-size: 12px;
  cursor: pointer;
  pointer-events: all;
  transition: background 0.2s ease;
}

.controlButton:hover {
  background: rgba(0, 150, 255, 1);
}

.controlButton:active {
  background: rgba(0, 50, 150, 1);
}
